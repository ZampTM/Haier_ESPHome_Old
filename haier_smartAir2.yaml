############################################
# https://github.com/paveldn/haier-esphome #
############################################
substitutions:
  device_name: Haier AC
  device_id: haier_climate
  uart_id: haier_port 

esphome:
  name: haier
  platform: ESP8266
  board: d1_mini

external_components:
  source:  github://paveldn/haier-esphome@dev

logger:
  level: DEBUG
  baud_rate: 0 #Important. You can't use serial port

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Optional manual IP
  manual_ip:
    static_ip: 192.168.5.124
    gateway: 192.168.5.1
    subnet: 255.255.255.0

# Enable Home Assistant API
api:
  password: !secret api_password
  reboot_timeout: 0s

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password
  topic_prefix: esphome/$device_id
  birth_message:
    topic: esphome/$device_id/availability/topic
    payload: online
  will_message:
    topic: esphome/$device_id/availability/topic
    payload: offline

ota:
  password: !secret ota_password

web_server:
  port: 80

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Samara
  - platform: homeassistant
    id: homeassistant_time

uart:
  baud_rate: 9600
  tx_pin: 1
  rx_pin: 3
  id: ${uart_id} 

captive_portal:

climate:
  - platform: haier
    id: ${device_id}
    protocol: smartAir2
    name: ${device_name} 
    uart_id: ${uart_id}
    visual:
      min_temperature: 16 °C
      max_temperature: 30 °C
      temperature_step: 1 °C
    supported_modes:
    - 'OFF'
    - AUTO
    - COOL
    - HEAT
    - DRY
    - FAN_ONLY
    supported_swing_modes:
    - 'OFF'
    - VERTICAL
    - HORIZONTAL
    - BOTH

switch:
#  - platform: template
#    id: ${device_id}_display_switch
#    name: ${device_name} display
#    icon: mdi:led-on
#    entity_category: config
#    restore_state: yes
#    lambda: |-
#      return id(${device_id}).get_display_state();
#    turn_on_action:
#      climate.haier.display_on: ${device_id}
#    turn_off_action:
#      climate.haier.display_off: ${device_id}
 
  - platform: template
    id: ${device_id}_health_mode
    name: ${device_name} health mode
    icon: mdi:leaf
    restore_state: yes
    lambda: |-
      return id(${device_id}).get_health_mode();
    turn_on_action:
      climate.haier.health_on: ${device_id}
    turn_off_action:
      climate.haier.health_off: ${device_id}

#  - platform: restart
#    name: ${device_name} restart

number:
  - platform: template
    id: ${device_id}_display_intensity 
    name: ${device_name} Display Brightness
    icon: mdi:brightness-5
    optimistic: true
    initial_value: 7
    min_value: 0
    max_value: 7
    step: 1
    update_interval: 1000ms
    restore_value: true
    on_value:
      then:
        - component.update: ${device_id}_display

display:
  platform: tm1637
  id: ${device_id}_display
  clk_pin: GPIO5
  dio_pin: GPIO4
  intensity: 7
  inverted: false
  length: 4
  lambda: |-
    it.set_intensity(id(${device_id}_display_intensity).state);
    if (id(${device_id}).mode == 0) {
    it.strftime("%H.%M", id(sntp_time).now());
    } else {
    it.printf(0, "%.0f", id(${device_id}).target_temperature);
    it.printf(2, "%.0f", id(${device_id}).current_temperature);
    }
